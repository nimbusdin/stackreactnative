{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _client = _interopRequireDefault(require(\"./assets/client\"));\n\nvar _this = this,\n    _jsxFileName = \"/home/andrew/Documents/maven/mavenclient/src/phrase-list.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar PhraseItem = function PhraseItem(_ref) {\n  var user = _ref.item;\n  return _react.default.createElement(View, {\n    style: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(View, {\n    style: styles.rowData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(Text, {\n    style: styles.rowDataText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }\n  }, \"aoeu\"), _react.default.createElement(Text, {\n    style: styles.rowDataSubText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, user.email)), _react.default.createElement(View, {\n    style: styles.checkbox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar PhraseList = function (_React$Component) {\n  (0, _inherits2.default)(PhraseList, _React$Component);\n\n  var _super = _createSuper(PhraseList);\n\n  function PhraseList(props, data) {\n    var _this2;\n\n    (0, _classCallCheck2.default)(this, PhraseList);\n    _this2 = _super.call(this, props);\n    _this2.state = {\n      user: _this2.props.data.user,\n      phrases: [],\n      userphrases: []\n    };\n    console.log(_this2.state.user);\n    return _this2;\n  }\n\n  (0, _createClass2.default)(PhraseList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getPhrases();\n    }\n  }, {\n    key: \"getPhrases\",\n    value: function getPhrases() {\n      var _this3 = this;\n\n      return _regenerator.default.async(function getPhrases$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _client.default.fetch('*[_type==\"phrase\"]').then(function (res) {\n                _this3.setState({\n                  phrases: res\n                });\n              }).catch(function (err) {\n                return console.error(err);\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_reactNative.FlatList, {\n        data: this.state.phrases,\n        renderItem: PhraseItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n  return PhraseList;\n}(_react.default.Component);\n\nvar _default = PhraseList;\nexports.default = _default;","map":{"version":3,"sources":["/home/andrew/Documents/maven/mavenclient/src/phrase-list.js"],"names":["PhraseItem","user","item","styles","row","rowData","rowDataText","rowDataSubText","email","checkbox","PhraseList","props","data","state","phrases","userphrases","console","log","getPhrases","sanityClient","fetch","then","res","setState","catch","err","error","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;AAEA,IAAMA,UAAU,GAAG,SAAbA,UAAa,OAAoB;AAAA,MAAXC,IAAW,QAAjBC,IAAiB;AACnC,SACE,6BAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIE,6BAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCN,IAAI,CAACO,KAA1C,CAJF,CADF,EAOE,6BAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD,CAZH;;IAcMC,U;;;;;AACF,sBAAYC,KAAZ,EAAmBC,IAAnB,EAAyB;AAAA;;AAAA;AACrB,+BAAMD,KAAN;AACA,WAAKE,KAAL,GAAa;AACTZ,MAAAA,IAAI,EAAE,OAAKU,KAAL,CAAWC,IAAX,CAAgBX,IADb;AAETa,MAAAA,OAAO,EAAE,EAFA;AAGTC,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAKJ,KAAL,CAAWZ,IAAvB;AAPqB;AAQxB;;;;wCAEmB;AAChB,WAAKiB,UAAL;AAEH;;;;;;;;;;AAGGC,8BAAaC,KAAb,CAAmB,oBAAnB,EACKC,IADL,CACU,UAACC,GAAD,EAAQ;AACV,gBAAA,MAAI,CAACC,QAAL,CAAc;AAACT,kBAAAA,OAAO,EAAEQ;AAAV,iBAAd;AACH,eAHL,EAIKE,KAJL,CAIW,UAACC,GAAD;AAAA,uBAAST,OAAO,CAACU,KAAR,CAAcD,GAAd,CAAT;AAAA,eAJX;;;;;;;;;;;6BAOK;AACL,aACI,6BAAC,qBAAD;AACI,QAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWC,OADrB;AAEI,QAAA,UAAU,EAAEd,UAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAOH;;;EAhCoB2B,eAAMC,S;;eAmChBlB,U","sourcesContent":["import React from \"react\";\nimport { ScrollView, ActivityIndicator, StyleSheet, FlatList } from \"react-native\";\n// import PhraseItem from \"./phrase-item\";\nimport sanityClient from './assets/client'\n\nconst PhraseItem = ({ item: user }) => {\n    return (\n      <View style={styles.row}>\n        <View style={styles.rowData}>\n          <Text style={styles.rowDataText}>\n            aoeu\n          </Text>\n          <Text style={styles.rowDataSubText}>{user.email}</Text>\n        </View>\n        <View style={styles.checkbox}/>\n      </View>\n    );\n  };\n\nclass PhraseList extends React.Component {\n    constructor(props, data) {\n        super(props);\n        this.state = {\n            user: this.props.data.user,\n            phrases: [],\n            userphrases: []\n        };\n        console.log(this.state.user);\n    }\n\n    componentDidMount() {\n        this.getPhrases();\n        \n    }\n\n    async getPhrases() {\n        sanityClient.fetch('*[_type==\"phrase\"]')\n            .then((res) =>{\n                this.setState({phrases: res});\n            })\n            .catch((err) => console.error(err))\n    }\n\n    render() {\n        return (\n            <FlatList\n                data={this.state.phrases}\n                renderItem={PhraseItem}\n            >\n            </FlatList>\n        )\n    }\n}\n\nexport default PhraseList;"]},"metadata":{},"sourceType":"script"}