{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"/Users/nicastelo/Lab/react-native-swipeable-lists/src/SwipeableQuickActions.js\";\n\nvar SwipeableQuickActions = function (_React$Component) {\n  (0, _inherits2.default)(SwipeableQuickActions, _React$Component);\n\n  function SwipeableQuickActions() {\n    (0, _classCallCheck2.default)(this, SwipeableQuickActions);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SwipeableQuickActions).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(SwipeableQuickActions, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var buttons = [];\n\n      if (children instanceof Array) {\n        for (var i = 0; i < children.length; i++) {\n          buttons.push(children[i]);\n\n          if (i < children.length - 1) {\n            buttons.push(_react.default.createElement(_reactNative.View, {\n              key: i,\n              style: styles.divider,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45\n              }\n            }));\n          }\n        }\n      } else {\n        buttons = children;\n      }\n\n      return _react.default.createElement(_reactNative.View, {\n        style: [styles.background, this.props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        }\n      }, buttons);\n    }\n  }]);\n  return SwipeableQuickActions;\n}(_react.default.Component);\n\nvar styles = _reactNative.StyleSheet.create({\n  background: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  },\n  divider: {\n    width: 4\n  }\n});\n\nvar _default = SwipeableQuickActions;\nexports.default = _default;","map":{"version":3,"sources":["SwipeableQuickActions.js"],"names":["SwipeableQuickActions","React","Component","children","buttons","i","styles","StyleSheet","background","flex","flexDirection","justifyContent","divider","width"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;;;AAmBMA,IAAAA,qB;;;;;;;;;;6BACiB;AACnB,UAAMG,QAAQ,GAAG,KAAA,KAAA,CAAjB,QAAA;AACA,UAAIC,OAAO,GAAX,EAAA;;AAGA,UAAID,QAAQ,YAAZ,KAAA,EAA+B;AAC7B,aAAK,IAAIE,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGF,QAAQ,CAA5B,MAAA,EAAqCE,CAArC,EAAA,EAA0C;AACxCD,UAAAA,OAAO,CAAPA,IAAAA,CAAaD,QAAQ,CAArBC,CAAqB,CAArBA;;AAEA,cAAIC,CAAC,GAAGF,QAAQ,CAARA,MAAAA,GAAR,CAAA,EAA6B;AAE3BC,YAAAA,OAAO,CAAPA,IAAAA,CAAa,eAAA,aAAA,CAAA,iBAAA,EAAA;AAAM,cAAA,GAAG,EAAT,CAAA;AAAc,cAAA,KAAK,EAAEE,MAAM,CAA3B,OAAA;AAAA,cAAA,QAAA,EAAA;AAAA,gBAAA,QAAA,EAAA,YAAA;AAAA,gBAAA,UAAA,EAAbF;AAAa;AAAA,aAAA,CAAbA;AAEH;AACF;AATD,OAAA,MASO;AAELA,QAAAA,OAAO,GAAPA,QAAAA;AAGF;;AAAA,aAAO,eAAA,aAAA,CAAA,iBAAA,EAAA;AAAM,QAAA,KAAK,EAAE,CAACE,MAAM,CAAP,UAAA,EAAoB,KAAA,KAAA,CAAjC,KAAa,CAAb;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,EAAP,OAAO,CAAP;;;;EApBgCL,eAAMC,S,CAApCF;;AAwBN,IAAMM,MAAM,GAAGC,wBAAAA,MAAAA,CAAkB;AAC/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EADM,CAAA;AAEVC,IAAAA,aAAa,EAFH,KAAA;AAGVC,IAAAA,cAAc,EAJe;AACnB,GADmB;AAM/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAPT;AAMW;AANsB,CAAlBN,CAAf;;eAWA,qB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport React from 'react';\nimport {StyleSheet, View} from 'react-native';\n\nimport type {ViewStyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';\n\ntype Props = $ReadOnly<{|\n  style?: ?ViewStyleProp,\n  children: React.Node,\n|}>;\n\n/**\n * A thin wrapper around standard quick action buttons that can, if the user\n * chooses, be used with SwipeableListView. Sample usage is as follows, in the\n * renderQuickActions callback:\n *\n * <SwipeableQuickActions>\n *   <SwipeableQuickActionButton {..props} />\n *   <SwipeableQuickActionButton {..props} />\n * </SwipeableQuickActions>\n */\nclass SwipeableQuickActions extends React.Component<Props> {\n  render(): React.Node {\n    const children = this.props.children;\n    let buttons = [];\n\n    // Multiple children\n    if (children instanceof Array) {\n      for (let i = 0; i < children.length; i++) {\n        buttons.push(children[i]);\n\n        if (i < children.length - 1) {\n          // Not last button\n          buttons.push(<View key={i} style={styles.divider} />);\n        }\n      }\n    } else {\n      // 1 child\n      buttons = children;\n    }\n\n    return <View style={[styles.background, this.props.style]}>{buttons}</View>;\n  }\n}\n\nconst styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  divider: {\n    width: 4,\n  },\n});\n\nexport default SwipeableQuickActions;\n"]},"metadata":{},"sourceType":"script"}