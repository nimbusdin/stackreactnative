{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"/Users/nicastelo/Lab/react-native-swipeable-lists/src/SwipeableQuickActionButton.js\";\n\nvar SwipeableQuickActionButton = function (_React$Component) {\n  (0, _inherits2.default)(SwipeableQuickActionButton, _React$Component);\n\n  function SwipeableQuickActionButton() {\n    (0, _classCallCheck2.default)(this, SwipeableQuickActionButton);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SwipeableQuickActionButton).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(SwipeableQuickActionButton, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.props.imageSource && !this.props.text && !this.props.mainView) {\n        return null;\n      }\n\n      var mainView = this.props.mainView ? this.props.mainView : _react.default.createElement(_reactNative.View, {\n        style: this.props.style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        accessibilityLabel: this.props.accessibilityLabel,\n        source: this.props.imageSource,\n        style: this.props.imageStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        }\n      }), _react.default.createElement(_reactNative.Text, {\n        style: this.props.textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        }\n      }, this.props.text));\n      return _react.default.createElement(_reactNative.TouchableHighlight, {\n        onPress: this.props.onPress,\n        testID: this.props.testID,\n        underlayColor: \"transparent\",\n        style: this.props.containerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        }\n      }, mainView);\n    }\n  }]);\n  return SwipeableQuickActionButton;\n}(_react.default.Component);\n\nvar _default = SwipeableQuickActionButton;\nexports.default = _default;","map":{"version":3,"sources":["SwipeableQuickActionButton.js"],"names":["SwipeableQuickActionButton","React","Component","mainView"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;;;AAUMA,IAAAA,0B;;;;;;;;;;6BAwBiB;AACnB,UAAI,CAAC,KAAA,KAAA,CAAD,WAAA,IAA2B,CAAC,KAAA,KAAA,CAA5B,IAAA,IAA+C,CAAC,KAAA,KAAA,CAApD,QAAA,EAAyE;AACvE,eAAA,IAAA;AAEF;;AAAA,UAAMG,QAAQ,GAAG,KAAA,KAAA,CAAA,QAAA,GACf,KAAA,KAAA,CADe,QAAA,GAGf,eAAA,aAAA,CAAA,iBAAA,EAAA;AAAM,QAAA,KAAK,EAAE,KAAA,KAAA,CAAb,KAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,EACE,eAAA,aAAA,CAAA,kBAAA,EAAA;AACE,QAAA,kBAAkB,EAAE,KAAA,KAAA,CADtB,kBAAA;AAEE,QAAA,MAAM,EAAE,KAAA,KAAA,CAFV,WAAA;AAGE,QAAA,KAAK,EAAE,KAAA,KAAA,CAHT,UAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EADF;AACE;AAAA,OAAA,CADF,EAME,eAAA,aAAA,CAAA,iBAAA,EAAA;AAAM,QAAA,KAAK,EAAE,KAAA,KAAA,CAAb,SAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,EAAoC,KAAA,KAAA,CATxC,IASI,CANF,CAHF;AAYA,aACE,eAAA,aAAA,CAAA,+BAAA,EAAA;AACE,QAAA,OAAO,EAAE,KAAA,KAAA,CADX,OAAA;AAEE,QAAA,MAAM,EAAE,KAAA,KAAA,CAFV,MAAA;AAGE,QAAA,aAAa,EAHf,aAAA;AAIE,QAAA,KAAK,EAAE,KAAA,KAAA,CAJT,cAAA;AAAA,QAAA,QAAA,EAAA;AAAA,UAAA,QAAA,EAAA,YAAA;AAAA,UAAA,UAAA,EAAA;AAAA;AAAA,OAAA,EADF,QACE,CADF;;;;EAxCqCF,eAAMC,S,CAAzCF;;eAoDN,0B","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport React from 'react';\nimport {Image, Text, TouchableHighlight, View} from 'react-native';\n\nimport type {DeprecatedViewPropTypes} from 'react-native/Libraries/DeprecatedPropTypes/DeprecatedViewPropTypes';\nimport type {ImageSource} from 'react-native/Libraries/Image/ImageSource';\n\n/**\n * Standard set of quick action buttons that can, if the user chooses, be used\n * with SwipeableListView. Each button takes an image and text with optional\n * formatting.\n */\nclass SwipeableQuickActionButton extends React.Component<{\n  accessibilityLabel?: string,\n  imageSource?: ?(ImageSource | number),\n  /* $FlowFixMe(>=0.82.0 site=react_native_fb) This comment suppresses an error\n   * found when Flow v0.82 was deployed. To see the error delete this comment\n   * and run Flow. */\n  imageStyle?: ?DeprecatedViewPropTypes.style,\n  mainView?: ?React.Node,\n  onPress?: Function,\n  /* $FlowFixMe(>=0.82.0 site=react_native_fb) This comment suppresses an error\n   * found when Flow v0.82 was deployed. To see the error delete this comment\n   * and run Flow. */\n  style?: ?DeprecatedViewPropTypes.style,\n  /* $FlowFixMe(>=0.82.0 site=react_native_fb) This comment suppresses an error\n   * found when Flow v0.82 was deployed. To see the error delete this comment\n   * and run Flow. */\n  containerStyle?: ?DeprecatedViewPropTypes.style,\n  testID?: string,\n  text?: ?(string | Object | Array<string | Object>),\n  /* $FlowFixMe(>=0.82.0 site=react_native_fb) This comment suppresses an error\n   * found when Flow v0.82 was deployed. To see the error delete this comment\n   * and run Flow. */\n  textStyle?: ?DeprecatedViewPropTypes.style,\n}> {\n  render(): React.Node {\n    if (!this.props.imageSource && !this.props.text && !this.props.mainView) {\n      return null;\n    }\n    const mainView = this.props.mainView ? (\n      this.props.mainView\n    ) : (\n      <View style={this.props.style}>\n        <Image\n          accessibilityLabel={this.props.accessibilityLabel}\n          source={this.props.imageSource}\n          style={this.props.imageStyle}\n        />\n        <Text style={this.props.textStyle}>{this.props.text}</Text>\n      </View>\n    );\n    return (\n      <TouchableHighlight\n        onPress={this.props.onPress}\n        testID={this.props.testID}\n        underlayColor=\"transparent\"\n        style={this.props.containerStyle}>\n        {mainView}\n      </TouchableHighlight>\n    );\n  }\n}\n\nexport default SwipeableQuickActionButton;\n"]},"metadata":{},"sourceType":"script"}